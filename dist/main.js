(()=>{var e={99:(e,n,t)=>{"use strict";t.d(n,{Z:()=>b});var i=t(15),o=t.n(i),a=t(879),r=t.n(a),d=t(667),s=t.n(d),l=t(525),c=t.n(l),A=t(476),m=t.n(A),u=t(271),C=t.n(u),p=r()(o());p.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap);"]);var g=s()(c()),f=s()(m()),B=s()(C());p.push([e.id,"*{margin:0;padding:0;box-sizing:border-box;font-family:'Open Sans', sans-serif}.text-center{text-align:center}body{display:flex}main{width:70%;height:100vh;padding-left:2em}h1{margin-bottom:3em}.list-heading{font-size:2.2em;margin-bottom:1em}.d-flex{display:flex}.justify-sb{justify-content:space-between}.align-center{align-items:center}nav{top:0;left:0;height:100vh;background:#1b2280;width:20%;color:#fff;padding:2rem}.list{border:0;display:block;background:transparent;color:#fff;font-size:1.1rem;margin-bottom:1em;cursor:pointer}.categories{height:2.5rem}.img{width:2.3rem;height:2.3rem;cursor:pointer;background-image:url("+g+");background-position:center;background-size:contain;background-repeat:no-repeat;margin-left:1em}.headings{margin:1.7rem 0;font-size:1.6em}#categories-container{width:100%;display:flex;justify-content:space-between;align-items:center}.task{width:70%}.task-body{display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid #bdbdbd;padding:0.5em}.task-body-text{display:flex;align-items:center;width:50%}.task-body-text p{margin-left:1em}.task-body-end{display:flex}.task-body-end div{display:flex;align-items:center}.task-body-end .edit-btn,.task-body-end .info-btn,.task-body-end .delete-btn{border:none;background-color:#1b2280;color:white;padding:0.5em;border-radius:0.5em;margin-right:0.5em}.task-body-end .info-btn{background-color:#ffba24}.task-body-end .delete-btn{background-color:#ff1616}.task-hidden{padding:0.7em;display:none;justify-content:space-between}.task-hidden-desc{width:40%}.task-hidden-desc p{margin-top:1em;width:100%;font-size:0.7em}.task-hidden-priority{display:flex;flex-direction:column;align-items:center;width:20%}.task-hidden-priority p{margin-top:1.3em;font-size:1.4em;color:red}.task-hidden-date{display:flex;flex-direction:column;align-items:center;width:25%}.task-hidden-date p{margin-top:1.3em;font-size:1.4em}.modal{display:none;position:fixed;z-index:1;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:#000;background-color:rgba(0,0,0,0.4)}.modal-content{background-color:#fefefe;margin:15% auto;padding:20px;border:1px solid #888;width:40%;display:flex;justify-content:space-between;align-items:center}.close{color:#aaa;font-size:28px;font-weight:bold;margin-left:1em}.close:hover,.close:focus{color:black;text-decoration:none;cursor:pointer}.delete{width:1rem;height:1rem;cursor:pointer;background-image:url("+f+");background-position:center;background-size:contain;background-repeat:no-repeat;margin-left:1em;display:none}form{position:relative;display:none;z-index:1;background:#fff;width:35vw;height:100vh;border-left:1px solid grey;padding:1rem 1.5rem}form span{display:block;text-align:right}form label{display:block;font-size:1rem;margin:0.8rem 0}form input,form select{padding:1rem 1.2rem;width:100%;border-radius:0.5rem;margin:0.5rem 0;font-size:1rem}form .btn{background:#5ecb84;border:0;color:#fff;font-size:1rem}#edit-task-form{display:none}.add-task-btn{position:absolute;right:10rem;bottom:5rem;width:3.5rem;height:3.5rem;background-image:url("+B+");background-position:center;background-size:contain;background-repeat:no-repeat;margin-left:1em;cursor:pointer}\n","",{version:3,sources:["webpack://./src/styles.scss"],names:[],mappings:"AAQA,EACE,QAAS,CACT,SAAU,CACV,qBAAsB,CACtB,mCAAoC,CACrC,aAGC,iBAAkB,CACnB,KAGC,YAAa,CACd,KAGC,SAAU,CACV,YAAa,CACb,gBAAiB,CAClB,GAGC,iBAAkB,CACnB,cAGC,eAAgB,CAChB,iBAAkB,CACnB,QAGC,YAAa,CACd,YAGC,6BAA8B,CAC/B,cAGC,kBAAmB,CACpB,IAGC,KAAM,CACN,MAAO,CACP,YAAa,CACb,kBAtDa,CAuDb,SAAU,CACV,UAvDU,CAwDV,YAAa,CACd,MAGC,QAAS,CACT,aAAc,CACd,sBAAuB,CACvB,UA/DU,CAgEV,gBAAiB,CACjB,iBAAkB,CAClB,cAAe,CAChB,YAGC,aAAc,CACf,KAGC,YAAa,CACb,aAAc,CACd,cAAe,CACf,wDAA0C,CAC1C,0BAA2B,CAC3B,uBAAwB,CACxB,2BAA4B,CAC5B,eAAgB,CACjB,UAGC,eAAgB,CAChB,eAAgB,CACjB,sBAGC,UAAW,CACX,YAAa,CACb,6BAA8B,CAC9B,kBAAmB,CACpB,MAGC,SAAU,CAEV,WACE,YAAa,CACb,kBAAmB,CACnB,6BAA8B,CAC9B,+BAAgC,CAChC,aAAc,CAEd,gBACE,YAAa,CACb,kBAAmB,CACnB,SAAU,CAHX,kBAMG,eAAgB,CACjB,eAID,YAAa,CADd,mBAIG,YAAa,CACb,kBAAmB,CALtB,6EASG,WAAY,CACZ,wBA/HO,CAgIP,WAAY,CACZ,aAAc,CACd,mBAAoB,CACpB,kBAAmB,CAdtB,yBAoBG,wBAtIkB,CAkHrB,2BA0BG,wBA3Ic,CA4If,aAKH,aAAc,CACd,YAAa,CACb,6BAA8B,CAE9B,kBACE,SAAU,CADX,oBAIG,cAAe,CACf,UAAW,CACX,eAAgB,CACjB,sBAID,YAAa,CACb,qBAAsB,CACtB,kBAAmB,CACnB,SAAU,CAJX,wBAOG,gBAAiB,CACjB,eAAgB,CAChB,SAAU,CACX,kBAID,YAAa,CACb,qBAAsB,CACtB,kBAAmB,CACnB,SAAU,CAJX,oBAOG,gBAAiB,CACjB,eAAgB,CACjB,OAQL,YAAa,CACb,cAAe,CACf,SAAU,CACV,MAAO,CACP,KAAM,CACN,UAAW,CACX,WAAY,CACZ,aAAc,CACd,qBAA8B,CAC9B,gCAAoC,CACrC,eAGC,wBAAyB,CACzB,eAAgB,CAChB,YAAa,CACb,qBAAsB,CACtB,SAAU,CACV,YAAa,CACb,6BAA8B,CAC9B,kBAAmB,CACpB,OAGC,UAAW,CACX,cAAe,CACf,gBAAiB,CACjB,eAAgB,CACjB,0BAIC,WAAY,CACZ,oBAAqB,CACrB,cAAe,CAChB,QAGC,UAAW,CACX,WAAY,CACZ,cAAe,CACf,wDAA4C,CAC5C,0BAA2B,CAC3B,uBAAwB,CACxB,2BAA4B,CAC5B,eAAgB,CAChB,YAAa,CACd,KAGC,iBAAkB,CAClB,YAAa,CACb,SAAU,CACV,eAAgB,CAOhB,UAAW,CACX,YAAa,CACb,0BAA2B,CAC3B,mBAAoB,CAdtB,UAOI,aAAc,CACd,gBAAiB,CARrB,WAiBI,aAAc,CACd,cAAe,CACf,eAAgB,CAnBpB,uBAwBI,mBAAoB,CACpB,UAAW,CACX,oBAAqB,CACrB,eAAgB,CAChB,cAAe,CA5BnB,UAgCI,kBAAmB,CACnB,QAAS,CACT,UAAW,CACX,cAAe,CAChB,gBAID,YAAa,CACd,cAGC,iBAAkB,CAClB,WAAY,CACZ,WAAY,CACZ,YAAa,CACb,aAAc,CACd,wDAA4C,CAC5C,0BAA2B,CAC3B,uBAAwB,CACxB,2BAA4B,CAC5B,eAAgB,CAChB,cAAe",sourcesContent:["$purple:#1b2280;\n$white: #fff;\n$black: #000;\n$yellow: rgb(255, 186, 36);\n$red: rgb(255, 22, 22);\n\n@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap');\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'Open Sans', sans-serif;\n}\n\n.text-center {\n  text-align: center;\n}\n\nbody {\n  display: flex;\n}\n\nmain {\n  width: 70%;\n  height: 100vh;\n  padding-left: 2em;\n}\n\nh1 {\n  margin-bottom: 3em;\n}\n\n.list-heading {\n  font-size: 2.2em;\n  margin-bottom: 1em;\n}\n\n.d-flex {\n  display: flex;\n}\n\n.justify-sb {\n  justify-content: space-between;\n}\n\n.align-center {\n  align-items: center;\n}\n\nnav {\n  top: 0;\n  left: 0;\n  height: 100vh;\n  background: $purple;\n  width: 20%;\n  color: $white;\n  padding: 2rem;\n}\n\n.list {\n  border: 0;\n  display: block;\n  background: transparent;\n  color: $white;\n  font-size: 1.1rem;\n  margin-bottom: 1em;\n  cursor: pointer;\n}\n\n.categories {\n  height: 2.5rem;\n}\n\n.img {\n  width: 2.3rem;\n  height: 2.3rem;\n  cursor: pointer;\n  background-image: url('./assets/plus.svg');\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  margin-left: 1em;\n}\n\n.headings {\n  margin: 1.7rem 0;\n  font-size: 1.6em;\n}\n\n#categories-container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.task {\n  width: 70%;\n\n  &-body {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid #bdbdbd;\n    padding: 0.5em;\n\n    &-text {\n      display: flex;\n      align-items: center;\n      width: 50%;\n\n      p {\n        margin-left: 1em;\n      }\n    }\n\n    &-end {\n      display: flex;\n\n      div {\n        display: flex;\n        align-items: center;\n      }\n\n      .edit-btn {\n        border: none;\n        background-color: $purple;\n        color: white;\n        padding: 0.5em;\n        border-radius: 0.5em;\n        margin-right: 0.5em;\n      }\n\n      .info-btn {\n        @extend .edit-btn;\n\n        background-color: $yellow;\n      }\n\n      .delete-btn {\n        @extend .edit-btn;\n\n        background-color: $red;\n      }\n    }\n  }\n\n  &-hidden {\n    padding: 0.7em;\n    display: none;\n    justify-content: space-between;\n\n    &-desc {\n      width: 40%;\n\n      p {\n        margin-top: 1em;\n        width: 100%;\n        font-size: 0.7em;\n      }\n    }\n\n    &-priority {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 20%;\n\n      p {\n        margin-top: 1.3em;\n        font-size: 1.4em;\n        color: red;\n      }\n    }\n\n    &-date {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 25%;\n\n      p {\n        margin-top: 1.3em;\n        font-size: 1.4em;\n      }\n    }\n  }\n}\n\n// MODAL STYLING\n\n.modal {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\n}\n\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto; /* 15% from the top and centered */\n  padding: 20px;\n  border: 1px solid #888;\n  width: 40%; /* Could be more or less, depending on screen size */\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.close {\n  color: #aaa;\n  font-size: 28px;\n  font-weight: bold;\n  margin-left: 1em;\n}\n\n.close:hover,\n.close:focus {\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.delete {\n  width: 1rem;\n  height: 1rem;\n  cursor: pointer;\n  background-image: url('./assets/cancel.svg');\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  margin-left: 1em;\n  display: none;\n}\n\nform {\n  position: relative;\n  display: none;\n  z-index: 1;\n  background: #fff;\n\n  span {\n    display: block;\n    text-align: right;\n  }\n\n  width: 35vw;\n  height: 100vh;\n  border-left: 1px solid grey;\n  padding: 1rem 1.5rem;\n\n  label {\n    display: block;\n    font-size: 1rem;\n    margin: 0.8rem 0;\n  }\n\n  input,\n  select {\n    padding: 1rem 1.2rem;\n    width: 100%;\n    border-radius: 0.5rem;\n    margin: 0.5rem 0;\n    font-size: 1rem;\n  }\n\n  .btn {\n    background: #5ecb84;\n    border: 0;\n    color: #fff;\n    font-size: 1rem;\n  }\n}\n\n#edit-task-form {\n  display: none;\n}\n\n.add-task-btn {\n  position: absolute;\n  right: 10rem;\n  bottom: 5rem;\n  width: 3.5rem;\n  height: 3.5rem;\n  background-image: url('./assets/create.svg');\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  margin-left: 1em;\n  cursor: pointer;\n}\n"],sourceRoot:""}]);const b=p},879:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,i){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(i)for(var a=0;a<this.length;a++){var r=this[a][0];null!=r&&(o[r]=!0)}for(var d=0;d<e.length;d++){var s=[].concat(e[d]);i&&o[s[0]]||(t&&(s[2]?s[2]="".concat(t," and ").concat(s[2]):s[2]=t),n.push(s))}},n}},15:e=>{"use strict";function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,i=new Array(n);t<n;t++)i[t]=e[t];return i}e.exports=function(e){var t,i,o=(i=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],i=!0,o=!1,a=void 0;try{for(var r,d=e[Symbol.iterator]();!(i=(r=d.next()).done)&&(t.push(r.value),!n||t.length!==n);i=!0);}catch(e){o=!0,a=e}finally{try{i||null==d.return||d.return()}finally{if(o)throw a}}return t}}(t,i)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?n(e,t):void 0}}(t,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],r=o[3];if("function"==typeof btoa){var d=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(d),l="/*# ".concat(s," */"),c=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[a].concat(c).concat([l]).join("\n")}return[a].join("\n")}},667:e=>{"use strict";e.exports=function(e,n){return n||(n={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},476:e=>{e.exports="images/cancel.e2e0ea.svg"},271:e=>{e.exports="images/create.54d47e.svg"},525:e=>{e.exports="images/plus.d7a6fc.svg"},379:(e,n,t)=>{"use strict";var i,o=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),a=[];function r(e){for(var n=-1,t=0;t<a.length;t++)if(a[t].identifier===e){n=t;break}return n}function d(e,n){for(var t={},i=[],o=0;o<e.length;o++){var d=e[o],s=n.base?d[0]+n.base:d[0],l=t[s]||0,c="".concat(s," ").concat(l);t[s]=l+1;var A=r(c),m={css:d[1],media:d[2],sourceMap:d[3]};-1!==A?(a[A].references++,a[A].updater(m)):a.push({identifier:c,updater:p(m,n),references:1}),i.push(c)}return i}function s(e){var n=document.createElement("style"),i=e.attributes||{};if(void 0===i.nonce){var a=t.nc;a&&(i.nonce=a)}if(Object.keys(i).forEach((function(e){n.setAttribute(e,i[e])})),"function"==typeof e.insert)e.insert(n);else{var r=o(e.insert||"head");if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}return n}var l,c=(l=[],function(e,n){return l[e]=n,l.filter(Boolean).join("\n")});function A(e,n,t,i){var o=t?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(e.styleSheet)e.styleSheet.cssText=c(n,o);else{var a=document.createTextNode(o),r=e.childNodes;r[n]&&e.removeChild(r[n]),r.length?e.insertBefore(a,r[n]):e.appendChild(a)}}function m(e,n,t){var i=t.css,o=t.media,a=t.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}var u=null,C=0;function p(e,n){var t,i,o;if(n.singleton){var a=C++;t=u||(u=s(n)),i=A.bind(null,t,a,!1),o=A.bind(null,t,a,!0)}else t=s(n),i=m.bind(null,t,n),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return i(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;i(e=n)}else o()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=(void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i));var t=d(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var i=0;i<t.length;i++){var o=r(t[i]);a[o].references--}for(var s=d(e,n),l=0;l<t.length;l++){var c=r(t[l]);0===a[c].references&&(a[c].updater(),a.splice(c,1))}t=s}}}}},n={};function t(i){if(n[i])return n[i].exports;var o=n[i]={id:i,exports:{}};return e[i](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{"use strict";class e{constructor(e){this.name=e,this.todos=[]}assignToDos(e){this.todos.push(e)}deleteList(e){const n=e.find((e=>e.name===this.name)),t=e.indexOf(n);t>-1&&e.splice(t,1)}}var n=t(379),i=t.n(n),o=t(99);i()(o.Z,{insert:"head",singleton:!1}),o.Z.locals;const a={modal:()=>document.getElementById("myModal"),btn:()=>document.getElementById("new-list-btn"),span:()=>document.getElementsByClassName("close")[0],input:()=>document.getElementById("modal-text"),submit:()=>document.getElementById("modal-submit-btn"),btnclick(){a.modal().style.display="block"},closeclick(){a.modal().style.display="none"}},r=a,d=e=>{localStorage.setItem("allLists",JSON.stringify(e))},s=document.getElementById("edit-task-form"),l=document.querySelector("#close-edit"),c=(e,n,t)=>{const i=(e,n,t,i,o)=>(e.title=n,e.description=t,e.priority=i,e.duedate=o,e),o=document.getElementById("task-listing");o.innerHTML="",e.todos.forEach(((e,a)=>{const r=document.createElement("div");r.className="task",r.id=e.title;const l=document.createElement("div");l.className="task-body";const A=document.createElement("div");A.className="task-hidden",A.id=`task${a}`,l.innerHTML=`<div class="task-body-text">\n                            <input type="checkbox" name="check" id="checkbox">\n                            <p>${e.title}</p>\n                          </div>\n                          <div class="task-body-end">\n                            <button class="info-btn" id=info${a}>More Info</button>\n                            <button class="edit-btn" id=edit${a}>Edit</button>\n                            <button class="delete-btn" id=del${a}>Delete</button>\n                          </div>`,A.innerHTML=`<div class="task-hidden-desc">\n                              <h5>Description:</h5>\n                              <p>${e.description}</p>\n                            </div>\n                            <div class="task-hidden-priority">\n                              <h5>Priority</h5>\n                              <p>${e.priority}</p>\n                            </div>\n                            <div class="task-hidden-date">\n                              <h5>Due Date</h5>\n                              <p>${e.duedate}</p>\n                            </div>`,r.appendChild(l),r.appendChild(A),o.appendChild(r);const m=document.getElementById(`info${a}`),u=document.getElementById(`del${a}`),C=document.getElementById(`edit${a}`);u.addEventListener("click",(()=>{((e,n,t,i)=>{const o=t.find((e=>e.name===n)),a=o.todos.findIndex((n=>n.title===e));o.todos.splice(a,1);const r=t.find((e=>"All"===e.name)),d=r.todos.findIndex((n=>n.title===e));r.todos.splice(d,1),c(i,t,i)})(e.title,e.category,n,t)})),m.addEventListener("click",(()=>(e=>{const n=document.getElementById(e);"none"===n.style.display?n.style.display="flex":n.style.display="none"})(`task${a}`))),C.addEventListener("click",(()=>((e,n,t)=>{s.style.display="block",s.addEventListener("submit",(o=>{o.preventDefault();const a=document.getElementById("edit-task-title").value,r=document.getElementById("edit-task-description").value,d=document.getElementById("edit-task-priority").value,s=document.getElementById("edit-task-duedate").value;if(""===a||""===r||""===s)alert("Please enter all the details to update the task");else{const o=((e,n)=>[n.find((e=>"All"===e.name)).todos.find((n=>n.title===e.title)),n.find((n=>n.name===e.category)).todos.find((n=>n.title===e.title))])(e,n);i(o[0],a,r,d,s),i(o[1],a,r,d,s),document.getElementById("edit-task-title").value="",document.getElementById("edit-task-description").value="",document.getElementById("edit-task-priority").value="",document.getElementById("edit-task-duedate").value="",c(t,n,t)}}))})(e,n,t))),d(n)}))};l.addEventListener("click",(()=>{s.style.display="none"}));const A=c;class m{constructor(e,n,t,i,o){this.title=e,this.description=n,this.duedate=o,this.priority=t,this.category=i,this.completeStatus=!1}editTitle(e){this.title=e}editDescription(e){this.description=e}editDate(e){this.duedate=e}editPriority(e){this.priority=e}assignList(e){e.push(this)}toggleStatus(){!1===this.completeStatus?this.completeStatus=!0:this.completeStatus=!1}}const u=document.querySelector(".all-categories"),C=document.querySelector("#my-lists"),p=document.querySelector("#task-category"),g=document.getElementById("create-task-form"),f=document.querySelector("#close-create");document.querySelector(".add-task-btn").addEventListener("click",(()=>{g.style.display="block"})),localStorage.clear(),f.addEventListener("click",(()=>{g.style.display="none"}));let B=[];if(localStorage.allLists)B=JSON.parse(localStorage.getItem("allLists"));else{const n=new e("All"),t=new e("Unlisted");B.push(n),B.push(t)}let b=B[0];A(b);const h=(e,n)=>{for(n===u&&(e=e.slice(2));n.firstChild;)n.removeChild(n.firstChild);p.innerHTML="";const t=document.createElement("option");return t.innerText="Unlisted",t.value="Unlisted",p.appendChild(t),e.forEach((e=>{const t=document.createElement("div");t.className="d-flex align-center justify-sb categories";const i=document.createElement("button"),o=document.createElement("div");o.className="delete";const a=document.createElement("option");i.innerText=e.name,i.className="list",i.onclick=()=>{var n;n=e.name,b=B.find((e=>e.name===n)),A(e,B,b)},a.innerText=e.name,a.value=e.name,t.appendChild(i),t.appendChild(o),t.addEventListener("mouseover",(()=>{o.style.display="block"})),t.addEventListener("mouseout",(()=>{o.style.display="none"})),o.addEventListener("click",(()=>{const e=o.previousElementSibling.innerText,n=B.findIndex((n=>n.name===e));B.splice(n,1),o.parentNode.remove(),[...p.children].filter((n=>n.innerText===e))[0].remove()})),p.appendChild(a),n.appendChild(t)})),d(B),n};h(B.slice(0,2),C),h(B,u),r.btn().onclick=r.btnclick,r.span().onclick=r.closeclick,r.submit().addEventListener("click",(()=>{const n=r.input().value;r.input().value="";const t=new e(n);B.push(t),h(B,u)})),g.addEventListener("submit",(e=>{e.preventDefault();const n=document.getElementById("task-title").value,t=document.getElementById("task-description").value,i=document.getElementById("task-priority").value,o=document.getElementById("task-duedate").value,a=document.getElementById("task-category").value;if(""===n||""===t||""===i||""===o)alert("Please enter all the details for the task");else{const e=((e,n,t,i,o,a,r)=>{const d=new m(e,n,t,i,o),s=a.find((e=>"All"===e.name)),l=a.find((e=>e.name===i));return s.todos.push(d),l.todos.push(d),r})(n,t,i,a,o,B,b);document.getElementById("task-title").value=" ",document.getElementById("task-description").value="",document.getElementById("task-priority").value="",document.getElementById("task-category").value="",document.getElementById("task-duedate").value="",A(e,B,b)}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,